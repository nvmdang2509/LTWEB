#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LTWEB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LTWEB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertROLE(ROLE instance);
    partial void UpdateROLE(ROLE instance);
    partial void DeleteROLE(ROLE instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertCOLOR(COLOR instance);
    partial void UpdateCOLOR(COLOR instance);
    partial void DeleteCOLOR(COLOR instance);
    partial void InsertMENU(MENU instance);
    partial void UpdateMENU(MENU instance);
    partial void DeleteMENU(MENU instance);
    partial void InsertNEW(NEW instance);
    partial void UpdateNEW(NEW instance);
    partial void DeleteNEW(NEW instance);
    partial void InsertPRODUCT(PRODUCT instance);
    partial void UpdatePRODUCT(PRODUCT instance);
    partial void DeletePRODUCT(PRODUCT instance);
    partial void InsertSIZE(SIZE instance);
    partial void UpdateSIZE(SIZE instance);
    partial void DeleteSIZE(SIZE instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LTWEBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<ROLE> ROLEs
		{
			get
			{
				return this.GetTable<ROLE>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<COLOR> COLORs
		{
			get
			{
				return this.GetTable<COLOR>();
			}
		}
		
		public System.Data.Linq.Table<MENU> MENUs
		{
			get
			{
				return this.GetTable<MENU>();
			}
		}
		
		public System.Data.Linq.Table<NEW> NEWs
		{
			get
			{
				return this.GetTable<NEW>();
			}
		}
		
		public System.Data.Linq.Table<PRODUCT> PRODUCTs
		{
			get
			{
				return this.GetTable<PRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<SIZE> SIZEs
		{
			get
			{
				return this.GetTable<SIZE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDACC;
		
		private string _HOTEN;
		
		private string _MATKHAU;
		
		private string _SDT;
		
		private string _DIACHI;
		
		private int _ID_ROLE;
		
		private EntityRef<ROLE> _ROLE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDACCChanging(int value);
    partial void OnIDACCChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnID_ROLEChanging(int value);
    partial void OnID_ROLEChanged();
    #endregion
		
		public ACCOUNT()
		{
			this._ROLE = default(EntityRef<ROLE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDACC", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDACC
		{
			get
			{
				return this._IDACC;
			}
			set
			{
				if ((this._IDACC != value))
				{
					this.OnIDACCChanging(value);
					this.SendPropertyChanging();
					this._IDACC = value;
					this.SendPropertyChanged("IDACC");
					this.OnIDACCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int NOT NULL")]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					if (this._ROLE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ROLEChanging(value);
					this.SendPropertyChanging();
					this._ID_ROLE = value;
					this.SendPropertyChanged("ID_ROLE");
					this.OnID_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ACCOUNT", Storage="_ROLE", ThisKey="ID_ROLE", OtherKey="ID_ROLE", IsForeignKey=true)]
		public ROLE ROLE
		{
			get
			{
				return this._ROLE.Entity;
			}
			set
			{
				ROLE previousValue = this._ROLE.Entity;
				if (((previousValue != value) 
							|| (this._ROLE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ROLE.Entity = null;
						previousValue.ACCOUNTs.Remove(this);
					}
					this._ROLE.Entity = value;
					if ((value != null))
					{
						value.ACCOUNTs.Add(this);
						this._ID_ROLE = value.ID_ROLE;
					}
					else
					{
						this._ID_ROLE = default(int);
					}
					this.SendPropertyChanged("ROLE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROLE")]
	public partial class ROLE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ROLE;
		
		private string _QUYEN;
		
		private EntitySet<ACCOUNT> _ACCOUNTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ROLEChanging(int value);
    partial void OnID_ROLEChanged();
    partial void OnQUYENChanging(string value);
    partial void OnQUYENChanged();
    #endregion
		
		public ROLE()
		{
			this._ACCOUNTs = new EntitySet<ACCOUNT>(new Action<ACCOUNT>(this.attach_ACCOUNTs), new Action<ACCOUNT>(this.detach_ACCOUNTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ROLE", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ROLE
		{
			get
			{
				return this._ID_ROLE;
			}
			set
			{
				if ((this._ID_ROLE != value))
				{
					this.OnID_ROLEChanging(value);
					this.SendPropertyChanging();
					this._ID_ROLE = value;
					this.SendPropertyChanged("ID_ROLE");
					this.OnID_ROLEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUYEN", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string QUYEN
		{
			get
			{
				return this._QUYEN;
			}
			set
			{
				if ((this._QUYEN != value))
				{
					this.OnQUYENChanging(value);
					this.SendPropertyChanging();
					this._QUYEN = value;
					this.SendPropertyChanged("QUYEN");
					this.OnQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ROLE_ACCOUNT", Storage="_ACCOUNTs", ThisKey="ID_ROLE", OtherKey="ID_ROLE")]
		public EntitySet<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this._ACCOUNTs;
			}
			set
			{
				this._ACCOUNTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCOUNTs(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = this;
		}
		
		private void detach_ACCOUNTs(ACCOUNT entity)
		{
			this.SendPropertyChanging();
			entity.ROLE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _categoryid;
		
		private string _name;
		
		private string _link;
		
		private string _meta;
		
		private System.Nullable<bool> _hide;
		
		private System.Nullable<int> _order;
		
		private System.Nullable<System.DateTime> _datebegin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnmetaChanging(string value);
    partial void OnmetaChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    partial void OnorderChanging(System.Nullable<int> value);
    partial void OnorderChanged();
    partial void OndatebeginChanging(System.Nullable<System.DateTime> value);
    partial void OndatebeginChanged();
    #endregion
		
		public CATEGORY()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta", DbType="NVarChar(MAX)")]
		public string meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if ((this._meta != value))
				{
					this.OnmetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("meta");
					this.OnmetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int")]
		public System.Nullable<int> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datebegin
		{
			get
			{
				return this._datebegin;
			}
			set
			{
				if ((this._datebegin != value))
				{
					this.OndatebeginChanging(value);
					this.SendPropertyChanging();
					this._datebegin = value;
					this.SendPropertyChanged("datebegin");
					this.OndatebeginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COLOR")]
	public partial class COLOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idcolor;
		
		private string _color1;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidcolorChanging(int value);
    partial void OnidcolorChanged();
    partial void Oncolor1Changing(string value);
    partial void Oncolor1Changed();
    #endregion
		
		public COLOR()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcolor", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idcolor
		{
			get
			{
				return this._idcolor;
			}
			set
			{
				if ((this._idcolor != value))
				{
					this.OnidcolorChanging(value);
					this.SendPropertyChanging();
					this._idcolor = value;
					this.SendPropertyChanged("idcolor");
					this.OnidcolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="color", Storage="_color1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string color1
		{
			get
			{
				return this._color1;
			}
			set
			{
				if ((this._color1 != value))
				{
					this.Oncolor1Changing(value);
					this.SendPropertyChanging();
					this._color1 = value;
					this.SendPropertyChanged("color1");
					this.Oncolor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COLOR_PRODUCT", Storage="_PRODUCTs", ThisKey="idcolor", OtherKey="idcolor")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.COLOR1 = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.COLOR1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU")]
	public partial class MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _link;
		
		private string _meta;
		
		private System.Nullable<bool> _hide;
		
		private System.Nullable<int> _order;
		
		private System.Nullable<System.DateTime> _databegin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnmetaChanging(string value);
    partial void OnmetaChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    partial void OnorderChanging(System.Nullable<int> value);
    partial void OnorderChanged();
    partial void OndatabeginChanging(System.Nullable<System.DateTime> value);
    partial void OndatabeginChanged();
    #endregion
		
		public MENU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta", DbType="NVarChar(50)")]
		public string meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if ((this._meta != value))
				{
					this.OnmetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("meta");
					this.OnmetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int")]
		public System.Nullable<int> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_databegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> databegin
		{
			get
			{
				return this._databegin;
			}
			set
			{
				if ((this._databegin != value))
				{
					this.OndatabeginChanging(value);
					this.SendPropertyChanging();
					this._databegin = value;
					this.SendPropertyChanged("databegin");
					this.OndatabeginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NEWS")]
	public partial class NEW : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _img;
		
		private string _description;
		
		private string _link;
		
		private string _detail;
		
		private string _meta;
		
		private System.Nullable<bool> _hide;
		
		private System.Nullable<int> _order;
		
		private System.Nullable<System.DateTime> _datebegin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OndetailChanging(string value);
    partial void OndetailChanged();
    partial void OnmetaChanging(string value);
    partial void OnmetaChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    partial void OnorderChanging(System.Nullable<int> value);
    partial void OnorderChanged();
    partial void OndatebeginChanging(System.Nullable<System.DateTime> value);
    partial void OndatebeginChanged();
    #endregion
		
		public NEW()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(30)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="NVarChar(MAX)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detail", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string detail
		{
			get
			{
				return this._detail;
			}
			set
			{
				if ((this._detail != value))
				{
					this.OndetailChanging(value);
					this.SendPropertyChanging();
					this._detail = value;
					this.SendPropertyChanged("detail");
					this.OndetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta", DbType="NVarChar(MAX)")]
		public string meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if ((this._meta != value))
				{
					this.OnmetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("meta");
					this.OnmetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int")]
		public System.Nullable<int> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datebegin
		{
			get
			{
				return this._datebegin;
			}
			set
			{
				if ((this._datebegin != value))
				{
					this.OndatebeginChanging(value);
					this.SendPropertyChanging();
					this._datebegin = value;
					this.SendPropertyChanged("datebegin");
					this.OndatebeginChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODUCT")]
	public partial class PRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<double> _price;
		
		private string _img;
		
		private string _description;
		
		private string _meta;
		
		private string _size;
		
		private string _color;
		
		private System.Nullable<bool> _hide;
		
		private System.Nullable<int> _order;
		
		private System.Nullable<System.DateTime> _datebegin;
		
		private System.Nullable<int> _categoryid;
		
		private int _idcolor;
		
		private int _idsize;
		
		private EntityRef<COLOR> _COLOR1;
		
		private EntityRef<SIZE> _SIZE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpriceChanging(System.Nullable<double> value);
    partial void OnpriceChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnmetaChanging(string value);
    partial void OnmetaChanged();
    partial void OnsizeChanging(string value);
    partial void OnsizeChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnhideChanging(System.Nullable<bool> value);
    partial void OnhideChanged();
    partial void OnorderChanging(System.Nullable<int> value);
    partial void OnorderChanged();
    partial void OndatebeginChanging(System.Nullable<System.DateTime> value);
    partial void OndatebeginChanged();
    partial void OncategoryidChanging(System.Nullable<int> value);
    partial void OncategoryidChanged();
    partial void OnidcolorChanging(int value);
    partial void OnidcolorChanged();
    partial void OnidsizeChanging(int value);
    partial void OnidsizeChanged();
    #endregion
		
		public PRODUCT()
		{
			this._COLOR1 = default(EntityRef<COLOR>);
			this._SIZE1 = default(EntityRef<SIZE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Float")]
		public System.Nullable<double> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="NVarChar(MAX)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta", DbType="NVarChar(50)")]
		public string meta
		{
			get
			{
				return this._meta;
			}
			set
			{
				if ((this._meta != value))
				{
					this.OnmetaChanging(value);
					this.SendPropertyChanging();
					this._meta = value;
					this.SendPropertyChanged("meta");
					this.OnmetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_size", DbType="NVarChar(10)")]
		public string size
		{
			get
			{
				return this._size;
			}
			set
			{
				if ((this._size != value))
				{
					this.OnsizeChanging(value);
					this.SendPropertyChanging();
					this._size = value;
					this.SendPropertyChanged("size");
					this.OnsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(30)")]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hide", DbType="Bit")]
		public System.Nullable<bool> hide
		{
			get
			{
				return this._hide;
			}
			set
			{
				if ((this._hide != value))
				{
					this.OnhideChanging(value);
					this.SendPropertyChanging();
					this._hide = value;
					this.SendPropertyChanged("hide");
					this.OnhideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int")]
		public System.Nullable<int> order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datebegin", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> datebegin
		{
			get
			{
				return this._datebegin;
			}
			set
			{
				if ((this._datebegin != value))
				{
					this.OndatebeginChanging(value);
					this.SendPropertyChanging();
					this._datebegin = value;
					this.SendPropertyChanged("datebegin");
					this.OndatebeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="Int")]
		public System.Nullable<int> categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idcolor", DbType="Int NOT NULL")]
		public int idcolor
		{
			get
			{
				return this._idcolor;
			}
			set
			{
				if ((this._idcolor != value))
				{
					if (this._COLOR1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidcolorChanging(value);
					this.SendPropertyChanging();
					this._idcolor = value;
					this.SendPropertyChanged("idcolor");
					this.OnidcolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsize", DbType="Int NOT NULL")]
		public int idsize
		{
			get
			{
				return this._idsize;
			}
			set
			{
				if ((this._idsize != value))
				{
					if (this._SIZE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidsizeChanging(value);
					this.SendPropertyChanging();
					this._idsize = value;
					this.SendPropertyChanged("idsize");
					this.OnidsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COLOR_PRODUCT", Storage="_COLOR1", ThisKey="idcolor", OtherKey="idcolor", IsForeignKey=true)]
		public COLOR COLOR1
		{
			get
			{
				return this._COLOR1.Entity;
			}
			set
			{
				COLOR previousValue = this._COLOR1.Entity;
				if (((previousValue != value) 
							|| (this._COLOR1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COLOR1.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._COLOR1.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._idcolor = value.idcolor;
					}
					else
					{
						this._idcolor = default(int);
					}
					this.SendPropertyChanged("COLOR1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_PRODUCT", Storage="_SIZE1", ThisKey="idsize", OtherKey="idsize", IsForeignKey=true)]
		public SIZE SIZE1
		{
			get
			{
				return this._SIZE1.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE1.Entity;
				if (((previousValue != value) 
							|| (this._SIZE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE1.Entity = null;
						previousValue.PRODUCTs.Remove(this);
					}
					this._SIZE1.Entity = value;
					if ((value != null))
					{
						value.PRODUCTs.Add(this);
						this._idsize = value.idsize;
					}
					else
					{
						this._idsize = default(int);
					}
					this.SendPropertyChanged("SIZE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIZE")]
	public partial class SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idsize;
		
		private string _size1;
		
		private EntitySet<PRODUCT> _PRODUCTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidsizeChanging(int value);
    partial void OnidsizeChanged();
    partial void Onsize1Changing(string value);
    partial void Onsize1Changed();
    #endregion
		
		public SIZE()
		{
			this._PRODUCTs = new EntitySet<PRODUCT>(new Action<PRODUCT>(this.attach_PRODUCTs), new Action<PRODUCT>(this.detach_PRODUCTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idsize", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idsize
		{
			get
			{
				return this._idsize;
			}
			set
			{
				if ((this._idsize != value))
				{
					this.OnidsizeChanging(value);
					this.SendPropertyChanging();
					this._idsize = value;
					this.SendPropertyChanged("idsize");
					this.OnidsizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="size", Storage="_size1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string size1
		{
			get
			{
				return this._size1;
			}
			set
			{
				if ((this._size1 != value))
				{
					this.Onsize1Changing(value);
					this.SendPropertyChanging();
					this._size1 = value;
					this.SendPropertyChanged("size1");
					this.Onsize1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_PRODUCT", Storage="_PRODUCTs", ThisKey="idsize", OtherKey="idsize")]
		public EntitySet<PRODUCT> PRODUCTs
		{
			get
			{
				return this._PRODUCTs;
			}
			set
			{
				this._PRODUCTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SIZE1 = this;
		}
		
		private void detach_PRODUCTs(PRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.SIZE1 = null;
		}
	}
}
#pragma warning restore 1591
